{"version":3,"sources":["Components/Dashboard/NewTripModal/NewTripModal.js","Components/Dashboard/DriverSelectModal/DriverSelectModal.js","Components/Dashboard/TripDisplay/TableTripDisplay.js","Components/Dashboard/TripDisplay/MaterialTripDisplay.js","Components/Dashboard/NewVehicleModal/NewVehicleModal.js","Components/Dashboard/GoogleMap/GoogleMap.js","Components/Dashboard/MessageDisplay.js","Components/Dashboard/NewDriverModal/NewDriverModal.js","Containers/Dashboard/Dashboard.js","App.js","index.js"],"names":["NewTripModal","useState","open","setOpen","Date","selectedDate","setSelectedDate","selectedType","setSelectedType","pu_time","pu_addr","inputs","setInputs","classes","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","primary","formControl","margin","minWidth","selectEmpty","marginTop","useStyles","handleClickOpen","handleClose","Button","variant","onClick","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","DatePicker","name","value","onChange","required","TextField","label","type","e","persist","target","defaultValue","className","textField","inputProps","step","InputLabel","Select","labelId","MenuItem","DialogActions","preventDefault","newTrip","trip_type","pu_date","fetch","headers","method","body","JSON","stringify","then","response","json","console","log","avatar","backgroundColor","blue","SimpleDialog","props","drivers","setDrivers","selectedValue","useEffect","a","async","handleListItemClick","driverId","tripId","assignDriver","List","map","driver","ListItem","button","first_name","_id","key","ListItemAvatar","Avatar","src","image","ListItemText","email","autoFocus","DriverSelectModal","React","selectedDriver","setSelectedDriver","setSelectedValue","Typography","descendingComparator","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","headCell","align","sortDirection","TableSortLabel","active","direction","property","event","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","secondary","main","lighten","dark","title","flex","EnhancedTableToolbar","Toolbar","clsx","Tooltip","IconButton","aria-label","width","marginBottom","table","border","clip","height","overflow","position","top","TripTable","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","trips","setTrips","emptyRows","Math","min","length","Paper","TableContainer","Table","size","newSelecteds","n","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","trip","isItemSelected","indexOf","hover","selectedIndex","newSelected","concat","handleClick","puDate","role","aria-checked","tabIndex","component","scope","puTime","puAddr","text_address","tripType","assignedDriver","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","MaterialTripDisplay","columns","field","data","query","Promise","resolve","reject","url","pageSize","result","error","vehicleList","setVehicleList","make","i","makes","MapMarker","GoogleMap","lat","lng","bootstrapURLKeys","language","defaultCenter","center","defaultZoom","MessageDisplay","message","openState","vertical","horizontal","state","setState","Snackbar","anchorOrigin","autoHideDuration","Alert","FormDialog","setMessage","msgState","setMsgState","last_name","phone","street","city","zipcode","formInputs","setFormInputs","loaded","driverImg","setDriverImg","fullWidth","Input","URL","createObjectURL","files","replace","formData","FormData","append","ok","Dashboard","location","tripData","App","utils","MomentUtils","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a8c8d25.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { \n  MenuItem,\n  InputLabel,\n  Select,\n} from '@material-ui/core'\nimport { DatePicker } from '@material-ui/pickers'\n// import { AccessAlarmOutlined, PlaceOutlined } from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default function NewTripModal() {\n  const [open, setOpen] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(new Date())\n  const [selectedType, setSelectedType] = useState('')\n  const [inputs, setInputs] = useState({ pu_time: '', pu_addr: '' })\n \n  const useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(4),\n      textAlign: 'left',\n      color: theme.palette.text.primary,\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }));\n  \n  const classes = useStyles();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleInputChange = e => {\n    e.persist();\n    setInputs(inputs => ({\n        ...inputs, \n        [e.target.name]: e.target.value\n      })\n    )\n  }\n\n  const handleSelect = e => {\n    setSelectedType(e.target.value);\n  }\n\n  const addNewTrip = e => {\n    e.preventDefault()\n\n    const newTrip = {\n      trip_type: selectedType,\n      pu_date: selectedDate,\n      pu_time: inputs.pu_time,\n      pu_addr: inputs.pu_addr,\n    }\n\n    fetch(`/trips/add-trip`, { \n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify(newTrip)\n    }\n   ).then(response => response.json())\n   .then(json => console.log(json))\n\n   handleClickOpen();\n  }\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        New Trip\n      </Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Enter A New Trip</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n          Use this form to create a new trip!\n          </DialogContentText>\n          <DatePicker \n            name=\"pu_date\" \n            value={selectedDate}\n            onChange={setSelectedDate}\n            required\n          />\n          <TextField\n            id=\"userPickupTime\"\n            label=\"Pickup Time\"\n            name=\"pu_time\"\n            type=\"time\"\n            onChange={handleInputChange}\n            defaultValue=\"05:30\"\n            className={classes.textField}\n            inputProps={{\n              step: 300, // 5 min intervals\n            }}\n            required\n          />\n           <InputLabel \n              id=\"demo-simple-select-outlined-label\"\n            >\n              Trip Type\n            </InputLabel>\n            <Select\n              name=\"trip_type\"\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              onChange={handleSelect}\n              value={selectedType}\n              required\n            >\n            <MenuItem value={'Airport'}>Airport</MenuItem>\n            <MenuItem value={'Local'}>Local</MenuItem>\n            <MenuItem value={'NYC'}>NYC</MenuItem>\n          </Select>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={addNewTrip} color=\"primary\">\n            Create Trip\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect }from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n});\n\nfunction SimpleDialog(props) {\n  const [drivers, setDrivers] = useState([])\n  const classes = useStyles();\n  const { onClose, selectedValue, open } = props;\n\n  const getDriversFromServer = async () => {\n    await fetch(`/drivers/all-drivers`)\n      .then(response => response.json())\n      .then(drivers => setDrivers(drivers))\n  }\n\n  const assignDriver = (tripId, driverId) => { \n    fetch(`/trips/assign-driver/${tripId}/${driverId}`, { method: `PUT`})\n  }\n\n  useEffect(() => {\n    getDriversFromServer();\n  }, [])\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (name, driverId) => {\n    onClose(name);\n    assignDriver(props.tripId, driverId)\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Assign A Driver</DialogTitle>\n      <List>\n        {drivers.map(driver => (\n          <ListItem button onClick={() => handleListItemClick(driver.first_name, driver._id)} key={driver._id}>\n            <ListItemAvatar>\n              <Avatar className={classes.avatar} src={driver.image}>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={driver.email} />\n          </ListItem>\n        ))}\n\n        <ListItem autoFocus button onClick={() => handleListItemClick('addDriverFunction')}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Add New Driver\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default function DriverSelectModal({ tripId }) {\n  const [open, setOpen] = React.useState(false);\n  const [selectedDriver, setSelectedDriver] = useState();\n  const [selectedValue, setSelectedValue] = useState();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"subtitle1\">\n        Assigned Driver: {selectedValue}\n      </Typography>\n      <Button \n        variant=\"outlined\" \n        color=\"primary\" \n        onClick={handleClickOpen}\n      >\n        Assign A Driver\n      </Button>\n      <SimpleDialog \n        selectedValue={() => setSelectedDriver(selectedDriver)} \n        open={open} \n        onClose={handleClose}\n        tripId={tripId}\n      />\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport DriverSelectModal from '../DriverSelectModal/DriverSelectModal'\n\n// const rows = [\n//   createData('12/30/1983', '12:30am', '36 Mohawk Lane, Old Bridge NJ 08857', 'Airport', 'Sturd McBurgis'),\n//   // createData('Donut', 452, 25.0, 51, 4.9),\n//   // createData('Eclair', 262, 16.0, 24, 6.0),\n//   // createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n//   // createData('Gingerbread', 356, 16.0, 49, 3.9),\n//   // createData('Honeycomb', 408, 3.2, 87, 6.5),\n// ];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'date', numeric: false, disablePadding: true, label: 'Trip Date' },\n  { id: 'time', numeric: false, disablePadding: false, label: 'Pickup Time' },\n  { id: 'pu_address', numeric: false, disablePadding: false, label: 'Pickup Address' },\n  { id: 'trip_type', numeric: false, disablePadding: false, label: 'Trip Type' },\n  { id: 'assigned_driver', numeric: false, disablePadding: false, label: 'Driver' },\n  { id: 'trip_actions', numeric: false, disablePadding: false, label: 'Edit Trip'}\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all trips' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'dark'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.dark, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Trips\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function TripTable() {\n  const classes = useStyles();\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('time');\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [dense, setDense] = useState(false);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [trips, setTrips] = useState([])\n\n  useEffect(() => {\n    const getTrips = async () => {\n     await fetch(`/trips/get-trips`)\n        .then(response => response.json())\n        .then(json => {\n          setTrips(json)\n        })\n    }\n    getTrips()\n  },[])\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = trips.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => {\n    return selected.indexOf(name) !== -1 \n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, trips.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={trips.length}\n            />\n            <TableBody>\n              {stableSort(trips, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((trip, index) => {\n                  const isItemSelected = isSelected(trip);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, trip.puDate)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={trip.puDate}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {trip.puDate}\n                      </TableCell>\n                      <TableCell align=\"left\">{trip.puTime}</TableCell>\n                      <TableCell align=\"left\">{trip.puAddr.text_address}</TableCell>\n                      <TableCell align=\"left\">{trip.tripType}</TableCell>\n                      <TableCell align=\"left\">{trip.assignedDriver}</TableCell>\n                      <TableCell component=\"th\"><DriverSelectModal tripId={trip._id} /></TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={trips.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}","import React from 'react';\nimport MaterialTable from 'material-table'\n\nconst MaterialTripDisplay = () => {\n  return (\n    <MaterialTable\n      columns={[\n        { title: 'Date', field: 'date', },\n        { title: 'Time', field: 'time' },\n        { title: 'Address', field: 'address'},\n        { title: 'Assigned Driver', field: 'assigned_driver' },\n        { title: 'Type', field: 'trip_type' },\n      ]}\n      title=\"Trip Table\"\n      data={query => \n        new Promise((resolve, reject) => {\n          let url = `/trips/get-trips?`\n          url += 'per_page=' + query.pageSize\n          url += '&page=' + (query.page + 1)\n          fetch(url)\n            .then(response => response.json())\n            .then(result => {\n              try {\n              resolve({\n                data: result.data,\n                // page: result.page - 1,\n                // totalCount: result.total,\n              })\n            } catch(error) { console.log(error )}\n            })\n        })\n      }\n    />\n  )\n\n}\n\nexport default MaterialTripDisplay;","import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { \n  MenuItem,\n  Select,\n} from '@material-ui/core'\n\nexport default function NewTripModal() {\n  const [vehicleList, setVehicleList] = useState([])\n  const [open, setOpen] = useState(false)\n  const [selectedType, setSelectedType] = useState(null)\n   \n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSelect = e => {\n    setSelectedType(e.target.value);\n  }\n\n  const addNewVehicle = e => {\n    e.preventDefault()\n\n    const newVehicle = {\n      make: 'Ford'\n    }\n\n    fetch(`/vehicles/add-vehicle`, { \n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify(newVehicle)\n    }\n   ).then(response => response.json())\n   .then(json => console.log(json))\n\n   handleClickOpen();\n  }\n\n  useEffect(() => {\n    const getVehicleList = async () => {\n      await fetch(`/vehicles/vehicle-list`)\n        .then(response => response.json())\n        .then(data => {\n          setVehicleList(data)\n        })\n    }\n    getVehicleList();\n  },[])\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        New Vehicle\n      </Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add A New Vehicle</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Add A New Vehicle\n          </DialogContentText>\n            <Select\n              name=\"vehicle-make\"\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              onChange={handleSelect}\n              value={selectedType}\n              required\n            >\n              { vehicleList.map((make, i) => (\n                <MenuItem \n                  key={i}\n                  value={i}\n                  >\n                  { make.makes[i] }\n                </MenuItem>\n              )) }\n          </Select>\n          <TextField></TextField>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={addNewVehicle} color=\"primary\">\n            Add Vehicle\n          </Button>\n          <Button onClick={handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport GoogleMapReact from 'google-map-react'\nimport MapPointer from './MapPointer/MapPointer'\n\nconst MapMarker = ({ text }) => <div>{text}</div>\n\nconst GoogleMap = ({ lat, lng, trips }) => {\n  const [coords, setCoords] = useState(null)\n\n  const key = `AIzaSyC0VaGsv4vdS6aBw7otqrikEI4ykWbQRbE`\n  return (\n    <div style={{ height: `33vh`, width: `100%`}}>\n    <GoogleMapReact\n      bootstrapURLKeys={{\n        key: key,\n        language: 'en'\n      }}\n      defaultCenter={{ lat: 39.9490, lng: -79.2949 }}\n      center={{lat: 39.9490, lng: -79.2949 }}\n      defaultZoom={10}\n    >\n    <MapMarker \n      text={\"Holla!\"}\n      lat={36.2949}\n      lng={-77.39029}\n    />\n    </GoogleMapReact>\n    </div>\n  )\n}\n\nexport default GoogleMap;","import React, { useState } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert'\n\nexport default function MessageDisplay({ message, openState }) {\n  const [state, setState] = useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n    message: ''\n  });\n\n  const { vertical, horizontal, open } = state;\n\n  const handleClick = newState => () => {\n    setState({ open: true, ...newState });\n  };\n\n  const handleClose = () => {\n    setState({ ...state, open: false });\n  };\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        key={`${vertical},${horizontal}`}\n        open={openState}\n        autoHideDuration={6000}\n        // onClick={handleClose}\n      >\n      <Alert onClick={handleClose}> {message} </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Input, Avatar } from '@material-ui/core';\nimport MessageDisplay from '../MessageDisplay'\nimport PropTypes from 'prop-types'\n\nexport default function FormDialog() {\n\tconst [open, setOpen] = useState(false)\n\tconst [message, setMessage] = useState('')\n\tconst [msgState, setMsgState] = useState(false)\n\tconst [formInputs, setFormInputs] = \n\t\tuseState({ \n\t\t\tfirst_name: '',\n\t\t\tlast_name: '',\n\t\t\temail: '',\n\t\t\tphone: '',\n\t\t\tstreet: '',\n\t\t\tcity: '',\n\t\t\tstate: '',\n\t\t\tzipcode: '',\n\t\t})\n\tconst [driverImg, setDriverImg] = useState({ image: '', loaded: 0 })\n\n\tconst changeHandler = e => {\n\t\tconsole.log(URL.createObjectURL(e.target.files[0]))\n\t\tsetDriverImg({ image: URL.createObjectURL(e.target.files[0]).replace(/blob:/, '') })\n\t}\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n\t};\n\n\tconst addDriver = e => {\n\t\te.preventDefault()\n\n\t\tconst formData = new FormData()\n\t\tformData.append('first_name', formInputs.first_name)\n\t\tformData.append('last_name', formInputs.last_name)\n\t\tformData.append('email', formInputs.email)\n\t\tformData.append('phone', formInputs.phone)\n\t\tformData.append('street', formInputs.street)\n\t\tformData.append('city', formInputs.city)\n\t\tformData.append('state', formInputs.state)\n\t\tformData.append('zipcode', formInputs.zipcode)\n\t\tformData.append('image', driverImg.image)\n\n\t\t// const newDriver = {\n\t\t// \tfirst_name: formInputs.first_name,\n\t\t// \tlast_name: formInputs.last_name,\n\t\t// \temail: formInputs.email,\n\t\t// \tphone: formInputs.phone,\n\t\t// \tstreet: formInputs.street,\n\t\t// \tcity: formInputs.city,\n\t\t// \tstate: formInputs.state,\n\t\t// \tzipcode: formInputs.zipcode,\n\t\t// \timage: imgData,\n\t\t// }\n\n\t\tfetch(`/drivers/add-driver`, \n\t\t\t{ \n\t\t\t\tmethod: `POST`,\n\t\t\t\theaders: {\n        \t'Content-Type': 'multipart/form-data'\n      \t},\n\t\t\t\tbody: formData\n\t\t\t})\n\t\t\t.then(response => { \n\t\t\t\tif(response.ok) {\n\t\t\t\t\tsetMessage(`Driver was successfully added!`)\n\t\t\t\t} else {\n\t\t\t\t\tsetMessage(`Driver was not set due to an error.`)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(result => {\n\t\t\t\tsetMsgState(true)\n\t\t\t\treturn result\n\t\t\t})\n\t\t\thandleClose();\n\t}\n\n  return (\n    <div>\n\t\t\t{ msgState ? <MessageDisplay openState={msgState} message={message} /> : null }\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Add Driver\n      </Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n\t\t\t\t<form>\n        <DialogTitle id=\"form-dialog-title\">Add Driver</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n\t\t\t\t\t\tid=\"first_name\"\n\t\t\t\t\t\tname=\"first_name\"\n            label=\"First Name\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonChange={e => setFormInputs({...formInputs, [e.target.name]: e.target.value})}\n            fullWidth\n          />\n        \t<TextField\n            autoFocus\n            margin=\"dense\"\n\t\t\t\t\t\tid=\"last_name\"\n\t\t\t\t\t\tname=\"last_name\"\n            label=\"Last Name\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonChange={e => setFormInputs({...formInputs, [e.target.name]: e.target.value})}\n            fullWidth\n          />\n\t\t\t\t\t<TextField\n            autoFocus\n            margin=\"dense\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tname=\"email\"\n            label=\"E-Mail\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tonChange={e => setFormInputs({...formInputs, [e.target.name]: e.target.value})}\n            fullWidth\n          />\n\t\t\t\t\t<TextField\n            autoFocus\n            margin=\"dense\"\n\t\t\t\t\t\tid=\"phone\"\n\t\t\t\t\t\tname=\"phone\"\n            label=\"Phone Number\"\n\t\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\t\tonChange={e => setFormInputs({...formInputs, [e.target.name]: e.target.value})}\n            fullWidth\n          />\n\t\t\t\t\t<TextField\n            autoFocus\n            margin=\"dense\"\n\t\t\t\t\t\tid=\"street\"\n\t\t\t\t\t\tname=\"street\"\n            label=\"Street\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonChange={e => setFormInputs({...formInputs, [e.target.name]: e.target.value})}\n            fullWidth\n          />\n\t\t\t\t\t<TextField\n            autoFocus\n            margin=\"dense\"\n\t\t\t\t\t\tid=\"city\"\n\t\t\t\t\t\tname=\"city\"\n            label=\"City\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonChange={e => setFormInputs({...formInputs, [e.target.name]: e.target.value})}\n            fullWidth\n          />\n\t\t\t\t\t<TextField\n            autoFocus\n            margin=\"dense\"\n\t\t\t\t\t\tid=\"state\"\n\t\t\t\t\t\tname=\"state\"\n            label=\"State\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonChange={e => setFormInputs({...formInputs, [e.target.name]: e.target.value})}\n            fullWidth\n          />\n\t\t\t\t\t<TextField\n            autoFocus\n            margin=\"dense\"\n\t\t\t\t\t\tid=\"zipcode\"\n\t\t\t\t\t\tname=\"zipcode\"\n            label=\"Zip Code\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tonChange={e => setFormInputs({...formInputs, [e.target.name]: e.target.value})}\n            fullWidth\n          />\n\t\t\t\t\t\n\t\t\t\t\t<Input \n\t\t\t\t\t\tname=\"image\"\n\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\tonChange={changeHandler}\n\t\t\t\t\t/>\n\t\t\t\t\t<Avatar src={ driverImg.image ? driverImg.image.name : 'https://i.pravatar.cc/150?img=2' } /> \n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} type=\"reset\" color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={addDriver} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n\t\t\t\t</form>\n      </Dialog>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react'\nimport NewTripModal from '../../Components/Dashboard/NewTripModal/NewTripModal'\nimport TripTable from '../../Components/Dashboard/TripDisplay/TableTripDisplay'\nimport MaterialTripDisplay from '../../Components/Dashboard/TripDisplay/MaterialTripDisplay'\nimport NewVehicleModal from '../../Components/Dashboard/NewVehicleModal/NewVehicleModal'\nimport { Button } from '@material-ui/core';\nimport GoogleMap from '../../Components/Dashboard/GoogleMap/GoogleMap'\nimport NewDriverModal from '../../Components/Dashboard/NewDriverModal/NewDriverModal'\n\nconst Dashboard = () => {\n  const [trips, setTrips] = useState([])\n  const key = `AIzaSyC0VaGsv4vdS6aBw7otqrikEI4ykWbQRbE`\n\n  // useEffect(() => {\n  //   const findVehicles = async () => {\n  //     await fetch(`/locations/locate-vehicle`)\n  //       .then(response => response.json())\n  //       .then(json => {\n  //         json.vehicles.sort((a, b) => a.distanceAwayInMinutes - b.distanceAwayInMinutes)\n  //         setVehicleList(json)\n  //         console.log(vehicleList)\n  //     })\n  //   }\n  //   findVehicles();\n  // }, [])\n\n  useEffect(() => {\n    const getTrips = async () => {\n      await fetch(`/trips/get-trips`)\n        .then(response => response.json())\n        .then(result => {\n          setTrips(result)\n        })\n    }\n    getTrips()\n  }, [])\n  \n  return (\n    <>\n    <GoogleMap lat={-74.5892} lng={38.54993} trips={trips}/>\n    <TripTable />\n      <Button onClick={() => console.log(trips[0].puAddr.location)}>Click to console trips</Button>\n    <NewTripModal />\n    <NewVehicleModal />\n    <NewDriverModal />\n    <MaterialTripDisplay\n      tripData={trips}\n    />\n    {/* <VehicleDisplay>\n      {\n        vehicleList ? vehicleList.vehicles.map((car, i) => (\n          <div key={i} style={{ listStyle: 'none' }}>\n            <VehicleTile \n              vehicleName={car.vehicleName}\n              vehicleID={car.vehicleID}\n              driver={car.currentDriver}\n              distance={car.distanceAwayInMinutes}\n              driverAvatar={car.driverAvatar}\n            />\n          </div>\n        )) : <Spinner name=\"ball-scale-ripple\" color=\"purple\"/>\n      }\n    </VehicleDisplay> */}\n    </>\n  )\n}\n\nexport default Dashboard;","import React from 'react';\nimport Dashboard from '../src/Containers/Dashboard/Dashboard';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport MomentUtils from '@date-io/moment'\n// import Auth from '../src/Views/Auth/Auth'\n\nfunction App() {\n  return (\n    <>\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <Dashboard />\n    </MuiPickersUtilsProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}